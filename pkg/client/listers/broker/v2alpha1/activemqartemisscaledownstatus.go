/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v2alpha1

import (
	v2alpha1 "github.com/rh-messaging/activemq-artemis-operator/pkg/apis/broker/v2alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ActiveMQArtemisScaledownStatusLister helps list ActiveMQArtemisScaledownStatuses.
type ActiveMQArtemisScaledownStatusLister interface {
	// List lists all ActiveMQArtemisScaledownStatuses in the indexer.
	List(selector labels.Selector) (ret []*v2alpha1.ActiveMQArtemisScaledownStatus, err error)
	// ActiveMQArtemisScaledownStatuses returns an object that can list and get ActiveMQArtemisScaledownStatuses.
	ActiveMQArtemisScaledownStatuses(namespace string) ActiveMQArtemisScaledownStatusNamespaceLister
	ActiveMQArtemisScaledownStatusListerExpansion
}

// activeMQArtemisScaledownStatusLister implements the ActiveMQArtemisScaledownStatusLister interface.
type activeMQArtemisScaledownStatusLister struct {
	indexer cache.Indexer
}

// NewActiveMQArtemisScaledownStatusLister returns a new ActiveMQArtemisScaledownStatusLister.
func NewActiveMQArtemisScaledownStatusLister(indexer cache.Indexer) ActiveMQArtemisScaledownStatusLister {
	return &activeMQArtemisScaledownStatusLister{indexer: indexer}
}

// List lists all ActiveMQArtemisScaledownStatuses in the indexer.
func (s *activeMQArtemisScaledownStatusLister) List(selector labels.Selector) (ret []*v2alpha1.ActiveMQArtemisScaledownStatus, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v2alpha1.ActiveMQArtemisScaledownStatus))
	})
	return ret, err
}

// ActiveMQArtemisScaledownStatuses returns an object that can list and get ActiveMQArtemisScaledownStatuses.
func (s *activeMQArtemisScaledownStatusLister) ActiveMQArtemisScaledownStatuses(namespace string) ActiveMQArtemisScaledownStatusNamespaceLister {
	return activeMQArtemisScaledownStatusNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ActiveMQArtemisScaledownStatusNamespaceLister helps list and get ActiveMQArtemisScaledownStatuses.
type ActiveMQArtemisScaledownStatusNamespaceLister interface {
	// List lists all ActiveMQArtemisScaledownStatuses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v2alpha1.ActiveMQArtemisScaledownStatus, err error)
	// Get retrieves the ActiveMQArtemisScaledownStatus from the indexer for a given namespace and name.
	Get(name string) (*v2alpha1.ActiveMQArtemisScaledownStatus, error)
	ActiveMQArtemisScaledownStatusNamespaceListerExpansion
}

// activeMQArtemisScaledownStatusNamespaceLister implements the ActiveMQArtemisScaledownStatusNamespaceLister
// interface.
type activeMQArtemisScaledownStatusNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ActiveMQArtemisScaledownStatuses in the indexer for a given namespace.
func (s activeMQArtemisScaledownStatusNamespaceLister) List(selector labels.Selector) (ret []*v2alpha1.ActiveMQArtemisScaledownStatus, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v2alpha1.ActiveMQArtemisScaledownStatus))
	})
	return ret, err
}

// Get retrieves the ActiveMQArtemisScaledownStatus from the indexer for a given namespace and name.
func (s activeMQArtemisScaledownStatusNamespaceLister) Get(name string) (*v2alpha1.ActiveMQArtemisScaledownStatus, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v2alpha1.Resource("activemqartemisscaledownstatus"), name)
	}
	return obj.(*v2alpha1.ActiveMQArtemisScaledownStatus), nil
}
